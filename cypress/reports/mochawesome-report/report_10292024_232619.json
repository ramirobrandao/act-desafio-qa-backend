{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-30T02:26:17.499Z",
    "end": "2024-10-30T02:26:19.963Z",
    "duration": 2464,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2f2fc71c-0949-49ce-8ba1-bff338bfe01b",
      "title": "",
      "fullFile": "cypress\\e2e\\users\\getUsers.cy.js",
      "file": "cypress\\e2e\\users\\getUsers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a44a2fa3-1291-4881-8c7a-94925eb22754",
          "title": "GET method",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get all users",
              "fullTitle": "GET method get all users",
              "timedOut": null,
              "duration": 721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getAllUsers().should(response => {\n  expect(response.status).to.be.equal(200);\n  expect(response.body.quantidade).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "ddbf2c50-8270-4ce3-8f95-60113cffad01",
              "parentUUID": "a44a2fa3-1291-4881-8c7a-94925eb22754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get a user id",
              "fullTitle": "GET method get a user id",
              "timedOut": null,
              "duration": 1384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getAllUsers().then(responseAllUsers => {\n  cy.getUserById(responseAllUsers.body.usuarios[0]._id).as('responseById');\n  cy.get('@responseById').should(response => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body.nome).to.be.equal(responseAllUsers.body.usuarios[0].nome);\n    expect(response.body.email).to.be.equal(responseAllUsers.body.usuarios[0].email);\n    expect(response.body.password).to.be.equal(responseAllUsers.body.usuarios[0].password);\n    expect(response.body.administrador).to.be.equal(responseAllUsers.body.usuarios[0].administrador);\n  });\n});",
              "err": {},
              "uuid": "a1a54492-79d6-4108-9c5e-5a7bfb52d401",
              "parentUUID": "a44a2fa3-1291-4881-8c7a-94925eb22754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get a user not found",
              "fullTitle": "GET method get a user not found",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://serverest.dev/usuarios/11111111111`,\n  failOnStatusCode: false\n}).as('getUserNotFound');\ncy.get('@getUserNotFound').should(response => {\n  expect(response.status).to.be.equal(400);\n  expect(response.body.message).to.be.equal('Usuário não encontrado');\n});",
              "err": {},
              "uuid": "a008a7b5-2414-4220-a44f-83abce061edf",
              "parentUUID": "a44a2fa3-1291-4881-8c7a-94925eb22754",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ddbf2c50-8270-4ce3-8f95-60113cffad01",
            "a1a54492-79d6-4108-9c5e-5a7bfb52d401",
            "a008a7b5-2414-4220-a44f-83abce061edf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true,
        "reportFilename": "report",
        "timestamp": "mmddyyyy_HHMMss",
        "inlineAssets": true,
        "autoOpen": true,
        "reportPageTitle": "Relatório de execução de testes backend",
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}